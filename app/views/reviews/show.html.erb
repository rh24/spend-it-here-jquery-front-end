<h2><%= @review.title %></h2>

<div id="review-<%= @review.id %>">
  <%= @review.content %><br /><br />
  <%= display_rating @review %><br />

  <% # DRY code. Separate if statement below into helper? %>
  <% if @review.would_recommend %>
    <p><%= "#{display_email @review} recommends this business." %></p>
  <% else %>
    <p><%= @review.user.email %> does not recommend this business.</p>
  <% end %>

  <p>User paid in <%= @review.crypto.name %>.</p>
</div><br />

<%# render 'comments/new', :review => @review %>
<button id="comment-btn">Add Comment</button>
<a id="load-comments" href="#">Load Comments</a>
<div id="comment-section" data-review-id="<%= @review.id %>" data-business-id="<%= @review.business_id %>">
  <div class="comment-object" data-value="<%= @comment %>">
    <div class="content">
      <div class="user" data-id="<%= current_user.id %>">

      </div>
    </div>
  </div>
</div>

<%= display_edit_link @review %> |
<%= display_delete_link @review %> |
<%= display_all_link @review %>

<script type="text/javascript">
  $(function () {
    $('#comment-btn').on('click', function (e) {
      e.preventDefault();
      let $commentArea = document.getElementById('create-comment')
      if (!$commentArea) {
        $('#comment-section').append(`
          <%= form_for @comment, url: biz_review_comments_path(@review.business, @review), :html => {:id => "create-comment"}, :method => :post do |f| %>
          <%= f.text_area :content %>
          <%# f.hidden_field :business_id, :value => @review.business.id %>
          <%= f.hidden_field :review_id, :value => @review.id %>
          <%= f.hidden_field :user_id, :value => current_user.id %>
          <%= f.submit %>
          <% end %>`)
        $('#comment-btn').hide();
      }

      $('form').on('submit', function (e) {
        e.preventDefault();
        let values = $(this).serialize();
        $.ajax({
          url: this.action,
          method: "POST",
          dataType: "json",
          data: values,
          success: function (resp) { //resp = {id: 71, content: "asdf", user_id: 1, review_id: 11, review: {â€¦}}
            // let pairs = location.search.slice(1).split('&');
            // let result = {};
            // pairs.forEach(function(pair) {
            //   pair = pair.split('=');
            //   result[pair[0]] = decodeURIComponent(pair[1] || '');
            // });
            // debugger;
            // let commentObj = JSON.stringify(result)
            let newComment = new Comment (resp["content"], resp["user_id"], resp["review_id"]);
            return newComment;
          },
          error: function () {
            alert('error');
          }
        }).done(function (data) {
          $('#comment-section').append(`<div data-id"${data["id"]}">
          <div class="content">${data["content"]}</div>
          </div>
          `)
        });
      })
    });
  });

  Comment.prototype.formatComment = () => {
    $('.content').html(`${this["content"]}`);
  }
</script>
